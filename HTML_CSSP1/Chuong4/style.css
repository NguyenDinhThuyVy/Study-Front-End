html {
  font-size: 62.5%;
}

body {
  font-family: "Poppins", sans-serif;
  font-size: 1.6em;
  font-weight: 500;
  /* height: 2000px; */
  /* font-style  */
}

img {
  display: block;
  max-width: 100%;
}

.boxed {
  width: 10rem;
  height: 10rem;
  background-color: lightpink;
  /* transform : scale viết tắt của scaleX và scaleY */
  /* Cách 1 */
  /* transform: scaleX(2) scaleY(2); */
  /* Cách 2 scale có thể giảm xuống 0 < */
  /* transform: scale(2, 2); */
  /* Muốn xoay thì sử dụng rotate */
  /* transform: rotate(45deg); */
  /* transform : translate translateX translateY  nhằm để di chuyển như margin mà margin là duy chuyển luôn còn tranfrom chi duy chuyển bên ngoài bân trong thì vẫn tại vị trí cũ*/
  /* transform: translateX(1rem); */
  /* nếu khi chi biết độ rộng và chiều cao thì ta sử dụng % trong transfrom */
  /* transform: translateX(100%) translateY(100%); */
  /* Viết gọp lại */
  /* transform: scale(1) rotate(45deg) translate(100%, 50%); */
  /* ngoài ra transfrom còn có skew */
  /* transform: skewX(-30deg); */
  /* Thay vì sử dụng transfrom : scale ta còn có thể sử dụng position:relative với các thuộc tính top , bottom , right , left  */
}

/* Master thuoc tinh position absolute */
/* .wrap {
  width: 100%;
  height: 50rem;
  background-color: chocolate;
  position: relative;
} */

/* .boxed { */
/* absolute là nhận ra cái boxed trên không chiếm khoảng trống nữa và tràn lên */
/* position: absolute; */
/* top: 10px;
  left: 10px; */
/* center cả chiều ngang lẫn chiều dọc */
/* left: 50%;
  top: 50%;
  transform: translate(-50%, -50%); */
/* center chiều ngang */
/* left: 50%;
  transform: translate(-50%, -50%); */
/* center chiều dọc */
/* top: 50%;
  transform: translate(-50%, -50%); */
/* Muốn thẻ boxed phủ hết cái khung wrap thì làm sao overlay all*/
/* Cách 1 */
/* top: 0;
  left: 0;
  width: 100%;
  height: 100%; */
/* Cách 2 */
/* top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: auto;
  height: auto; */
/* overlay theo chiều ngang */
/* width: auto; */
/* có thể sử dụng width 100% thay cho width auto khi đó không cần sử dụng right 0 */
/* right: 0;
  left: 0;
  top: 0; */
/*  overlay theo chiều dọc*/
/* height: auto;
  top: 0;
  bottom: 0;
  z-index: 2;
} */

/* Z-index càng lớn thì càng nằm ở phía trên , z-index phải luôn đi theo position:relative */
/* p {
  color: aliceblue;
  position: relative;
  z-index: 1;
} */

/* position fixed */
/* Không sử dụng transfrom trong các phần tủ cha chứa phần tử fixed */
.wrapper {
  transform: translate(50px, 50px);
}

/* .header {
  height: 10rem; */
/* background-color: cadetblue; */
/* fixed cố định khuyến cáo ko nên đi cùng với transform */
/* position: fixed;
  top: 0;
  left: 0;
  width: 100%;
} */

/*
body {
  transform: translate(30px, 30px);
  padding-top: 10rem;
} */

/* Thực hành với thuộc tính position1 */
body {
  background-color: aliceblue;
  width: 100%;
  height: 100vh;
}

.modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 2;
  background-color: rgba(0, 0, 0, 0.125);
}

.modal__content {
  width: 80%;
  height: 80%;
  background-color: beige;
  position: absolute;
  padding: 5rem;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

/* Thực hành với thuộc tính position2 */
.video {
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  background-image: linear-gradient(to right, #c0ffe3, #DDA0DD);
  box-shadow: 10px 0px 20px 10px #d35555;
}

.video__image {
  width: 90%;
  height: 80%;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 10%;
}

.video__icon {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  color: aliceblue;
}

/* Thực hành với position3 */
.card {
  width: 20rem;
  height: 60rem;
  background-image: linear-gradient(to right bottom, #DDA0DD, #c0ffe3);
  position: relative;
  border: 2px solid rgba(20, 107, 220, 0.268);
  box-shadow: 5px 0px 10px 5px #559cd3;
}

.sale {
  font-size: 1.2rem;
  padding: 5px;
  color: aliceblue;
  background-color: burlywood;
  border-radius: 1rem;
  position: absolute;
  top: 0;
  right: 0;
  z-index: 2;
}

.button {
  width: 20%;
  height: 5%;
  position: absolute;
  color: #d35555;
  background-color: gold;
  border-radius: 1rem;
  padding: 5px;
  text-align: center;
  left: 50%;
  top: 95%;
  transform: translate(-50%, -50%);
}

/* Thực hành position4 */
.bar {
  width: 30rem;
  height: 1rem;
  background-color: #ccc;
  margin: 5rem auto 0;
  border-radius: 2rem;
  position: relative;
}

.bar-progress {
  height: 100%;
  width: 50%;
  /* inherit là kế thừa lại thăng cha */
  border-radius: inherit;
  background-color: rgb(5, 139, 5);
}

.bar-circle {
  width: 1.5rem;
  height: 1.5rem;
  background-color: rgb(5, 139, 5);
  border-radius: 2rem;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/* Hiểu và nắm tốt pseudo :before và after khó nhằn trong css */
/*  Ở before hoặc after thì bắt buộc phải có content thì mới chạy được*/
/* .title:before {
  content: "Hello tui ten la ";
}

.title:after {
  content: " Tam biet nha ";
} */

/* Thực hành với pseudo before và after #1 */
.title {
  position: relative;
  padding: 2rem;
  margin: 5rem;
  font-size: 3rem;
  font-weight: bold;
}

/*  xài after trong trường hợp này cũng được do không có giá trị content nhập vào và sự điều chỉnh chủ yếu lf phụ thuộc vào top left và transfrom do có sdung position*/
.title:before {
  content: "";
  height: 1rem;
  width: 1rem;
  border-radius: 1rem;
  background-color: tomato;
  position: absolute;
  top: 50%;
  left: 0;
  transform: translateY(-50%);
}

/* Thực hành với pseudo before và after #2 */
.line {
  text-align: center;
  position: relative;
  margin: 5rem;
}


.line:after {
  content: "";
  width: 100%;
  height: 1px;
  background-color: orange;
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
}

.line-text {
  display: inline-block;
  background-color: aliceblue;
  padding: 10px;
  position: relative;
  z-index: 2;
  font-size: 3rem;
  font-weight: bold;
  color: #d35555;
}

/* Thực hành với pusedo before and after #3 */
.icon {
  width: 5rem;
  height: 5rem;
  border-radius: 4px;
  color: chocolate;
  position: relative;
  margin: 5rem auto;
}

.icon:after {
  content: "";
  width: 100%;
  height: 100%;
  border-radius: inherit;
  /* currentcolor lấy màu theo màu cha chứa nó */
  background-color: currentColor;
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0.25;
}

.icon-user {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);

}

/* Thực hành với pseudo before and after #4 */
.effect {
  /* ẩn dấu gạch bên dưới thẻ a */
  text-decoration: none;
  display: inline-block;
  padding: 2rem;
  text-align: center;
  background-color: #dda0dd34;
  border: 1px solid orange;
  margin: 5rem;
  transition: color 0.25s linear;
  color: #368fd3;
  position: relative;
  z-index: 1;
}

.effect:before {
  content: "";
  height: 100%;
  width: 0;
  position: absolute;
  top: 0;
  left: 0;
  background-color: rgb(222, 167, 96);
  z-index: -1;
  transition: width 0.25s linear;
}

.effect:hover:before {
  width: 100%;
}

.effect:hover {
  color: #d35555;
}

/* Tại sao before và after quan trọng */
.boxed1 {
  width: 10rem;
  height: 10rem;
  position: relative;
}

.boxed1:after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #559cd3;
  transform: rotate(45deg);
  z-index: -1;
}

/* Animation là gì ? Tìm hiểu và nắm kiến thức về animation cơ bản */
.boxed2 {
  width: 5rem;
  height: 5rem;
  background-color: #d35555;
  /* transform: translateX(10rem); */
  /* Tên animayion muốn sử dụng animation-name */
  /* animation-name: move; */
  /* Thời gian chạy của animation là sử dụng animation-duration */
  /* animation-duration: 2s; */
  /* Muốn cho animation chạy từ from đến to rồi chạy về ta sử dụng animation-direction:alternate */
  /* animation-direction: alternate; */
  /* Thể hiện số lần chạy của animation nếu sử dụng infinite sẽ chạy vô tận*/
  /* animation-iteration-count: 1; */
  /* Tạo kiểu chạy cho animation */
  /* animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275); */
  /* điểm cuối chuyển động trong animation */
  /* forwards là đứng tại điểm đó luôn còn  backwards thì về lại vị trí ban đầu*/
  /* animation-fill-mode: backwards; */
  /* viết rút gọn */
  animation: move 2s forwards infinite alternate cubic-bezier(0.175, 0.885, 0.32, 1.275) 2s;
  /* có animation delay và sẽ được viết ở cuối dong rút gọn */
}

@keyframes move {

  /* from -> to */
  from {
    transform: translateX(0);
  }

  to {
    transform: translateX(20rem);
  }
}

/* Thực hành với animation #1*/
.circle-loading {
  width: 5rem;
  height: 5rem;
  background-color: burlywood;
  margin: 5rem auto;
  border-radius: 50%;
  /* transform: scale(2);
  opacity: 0.25; */
  position: relative;
}

.circle-loading::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: inherit;
  border-radius: inherit;
  animation: fade 1s forwards infinite linear;
}

@keyframes fade {
  /* from {
    transform: scale(1);
    opacity: 1;
  } */

  to {
    transform: scale(2);
    opacity: 0.25;
  }
}

/* Thực hành với animation #2 */
.circles {
  text-align: center;
  /* transfrom : rotate(200deg)
  transfrom:rotate(160deg)
  transfrom:rotate(180deg) */
  animation: loading 1s infinite;
}

@keyframes loading {
  50% {
    transform: rotate(200deg);
  }

  75% {
    transform: rotate(160deg);
  }

  100% {
    transform: rotate(180deg);
  }
}

.cricles-item {
  width: 3rem;
  height: 3rem;
  border-radius: 3rem;
  border: 2px solid palevioletred;
  display: inline-block;
  margin: 0 0.3rem 0;
}

.cricles-item:first-child {
  border-color: palevioletred;
}